server:
  port: 8081

spring:
  application:
    name: "accounts"
  datasource:
    url: jdbc:h2:mem:testdb
    driverClassName: org.h2.Driver
    username: sa
    password: ''
  h2:
    console:
      enabled: true
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    show-sql: true
    hibernate:
      ddl-auto: update
#  sql:
#    init:
#      mode: always
  profiles:
    active: "prod"
  config:
    import: "optional:configserver:http://localhost:8071/"
  cloud:
    openfeign:
      circuitbreaker:
        enabled: true
management:
  endpoints:
    web:
      exposure:
        include: "*"
    health:
      readiness-state:
        enabled: true
      liveness-state:
        enabled: true
  endpoint:
    shutdown:
      enabled: true
    health:
      probes:
        enabled: true
  info:
    env:
      enabled: true

  metrics:
    tags:
      application: ${spring.application.name}


endpoints:
  shutdown:
    enabled: true

eureka:
  instance:
    preferIdAddress: true
  client:
    fetchRegistry: true
    registerWithEureka: true
    serviceUrl:
      defaultZone: "http://localhost:8070/eureka/"


info:
  app:
    name: "Accounts"
    description: "Accounts application for Piggy Bank"
    version: 1.0.0

logging:
  level:
    com:
      banking:
        accounts: DEBUG
  pattern:
    level: "%5p [${spring.application.name},%X{trace_id},%X{span_id}]"

resilience4j.circuitbreaker:
  configs:
    default:
      slidingWindowSize: 10                     # Atleast analyze 10 calls before going to open state
      permittedNumberOfCallsInHalfOpenState: 2  # No of calls we are permitting in half open state.
      failureRateThreshold: 50                  # If 50% of the calls fails then closed -> open
      waitDurationInOpenState: 10000

resilience4j.retry:
  configs:
    default:
      maxAttempts: 3
      waitDuration: 100
      enableExponentialBackoff: true
      exponentialBackoffMultiplier: 2

resilience4j.ratelimiter:
  configs:
    default:
      timeoutDuration: 1000
      limitRefreshPeriod: 5000   # 1 request is allowed for every 5 sec
      limitForPeriod: 1